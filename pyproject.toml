[project]
name = "noths-pipeline"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "dbt-duckdb>=1.9.0",
    "dlt[duckdb]>=1.17.1",
]

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "pytest-cov>=6.0.0",
    "ruff>=0.14.2",
    "mypy>=1.13.0",
    "pre-commit>=4.0.1",
    "sqlfluff>=3.2.0",
    "sqlfluff-templater-dbt>=3.2.0",
    "types-requests>=2.31.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=pipeline",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=75",
    "-v",
]

[tool.coverage.run]
source = ["pipeline"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/.venv/*",
    "pipeline/feefo_pipeline.py",  # Simple wrapper, not critical to test
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "except.*:",  # Defensive error handling
    "raise RuntimeError",  # Error re-raising
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by formatter)
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports
"tests/*" = ["B", "UP"]   # less strict for tests
